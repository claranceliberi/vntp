version: '3.8'

services:
  # Databases
  postgres-imisanzu:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: imisanzu_user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: imisanzu_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_imisanzu_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U imisanzu_user -d imisanzu_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  postgres-oracle:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: oracle_user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: oracle_db
    ports:
      - "5433:5432"
    volumes:
      - postgres_oracle_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U oracle_user -d oracle_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Application Services
  oracle-service:
    build:
      context: ./oracle
      dockerfile: Dockerfile
    ports:
      - "3002:3002"
    environment:
      - DATABASE_URL=postgresql://oracle_user:password@postgres-oracle:5432/oracle_db?schema=public
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - API_PORT=3002
      - API_PREFIX=api/v1
      - SWAGGER_ENABLE=1
      - JWT_SECRET=your_jwt_secret_key_here
      - JWT_ISSUER=vntp-oracle-service
      - HEALTH_TOKEN=health_check_token_123
      - PASSENGERS_ALLOWED=yes
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://signoz-otel-collector:4318
    depends_on:
      postgres-oracle:
        condition: service_healthy
      redis:
        condition: service_healthy
      signoz-otel-collector:
        condition: service_started
    healthcheck:
      test: ["CMD-SHELL", "wget -q --spider http://localhost:3002/api/v1/employees || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  imisanzu-service:
    build:
      context: ./imisanzu
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    environment:
      - DATABASE_URL=postgresql://imisanzu_user:password@postgres-imisanzu:5432/imisanzu_db?schema=public
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - API_PORT=3001
      - API_PREFIX=api/v1
      - SWAGGER_ENABLE=1
      - JWT_SECRET=your_jwt_secret_key_here
      - JWT_ISSUER=vntp-imisanzu-service
      - HEALTH_TOKEN=health_check_token_123
      - PASSENGERS_ALLOWED=yes
      - ORACLE_SERVICE_URL=http://oracle-service:3002
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://signoz-otel-collector:4318
    depends_on:
      postgres-imisanzu:
        condition: service_healthy
      redis:
        condition: service_healthy
      oracle-service:
        condition: service_healthy
      signoz-otel-collector:
        condition: service_started
    healthcheck:
      test: ["CMD-SHELL", "wget -q --spider http://localhost:3001/api/v1/employees || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Observability Stack
  postgres-exporter-imisanzu:
    image: prometheuscommunity/postgres-exporter:latest
    container_name: postgres-exporter-imisanzu
    environment:
      - DATA_SOURCE_NAME=postgresql://imisanzu_user:password@postgres-imisanzu:5432/imisanzu_db?sslmode=disable
    ports:
      - "9187:9187"
    depends_on:
      postgres-imisanzu:
        condition: service_healthy

  postgres-exporter-oracle:
    image: prometheuscommunity/postgres-exporter:latest
    container_name: postgres-exporter-oracle  
    environment:
      - DATA_SOURCE_NAME=postgresql://oracle_user:password@postgres-oracle:5432/oracle_db?sslmode=disable
    ports:
      - "9188:9187"
    depends_on:
      postgres-oracle:
        condition: service_healthy

  redis-exporter:
    image: oliver006/redis_exporter:latest
    container_name: redis-exporter
    environment:
      - REDIS_ADDR=redis://redis:6379
    ports:
      - "9121:9121"
    depends_on:
      redis:
        condition: service_healthy

  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - "4317:4317"   # OTLP gRPC receiver
      - "4318:4318"   # OTLP HTTP receiver
      - "8090:8090"   # Prometheus metrics endpoint
    depends_on:
      - prometheus

  prometheus:
    image: prom/prometheus:latest
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
    depends_on:
      - prometheus

  # Official SigNoz Setup
  signoz-zookeeper:
    image: bitnami/zookeeper:3.7.1
    container_name: signoz-zookeeper-1
    hostname: zookeeper-1
    user: root
    ports:
      - "2181:2181"
      - "2888:2888"
      - "3888:3888"
    volumes:
      - zookeeper_data:/bitnami/zookeeper
    environment:
      - ZOO_SERVER_ID=1
      - ALLOW_ANONYMOUS_LOGIN=yes
      - ZOO_AUTOPURGE_INTERVAL=1

  signoz-clickhouse:
    restart: on-failure
    image: clickhouse/clickhouse-server:24.1.2-alpine
    container_name: signoz-clickhouse
    hostname: clickhouse
    tty: true
    ports:
      - "9000:9000"
      - "8123:8123"
      - "9181:9181"
    volumes:
      - ./monitoring/signoz/clickhouse-config.xml:/etc/clickhouse-server/config.xml
      - ./monitoring/signoz/clickhouse-users.xml:/etc/clickhouse-server/users.xml
      - ./monitoring/signoz/custom-function.xml:/etc/clickhouse-server/custom-function.xml
      - clickhouse_data:/var/lib/clickhouse/
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "0.0.0.0:8123/ping"]
      interval: 30s
      timeout: 5s
      retries: 3
    ulimits:
      nproc: 65535
      nofile:
        soft: 262144
        hard: 262144

  otel-collector-migrator-sync:
    image: signoz/signoz-schema-migrator:0.111.16
    container_name: otel-migrator-sync
    command:
      - "sync"
      - "--dsn=tcp://clickhouse:9000"
      - "--up="
      - "--replication=false"
    depends_on:
      signoz-clickhouse:
        condition: service_healthy

  otel-collector-migrator-async:
    image: signoz/signoz-schema-migrator:0.111.16
    container_name: otel-migrator-async
    command:
      - "async"
      - "--dsn=tcp://clickhouse:9000"
      - "--up="
      - "--replication=false"
    depends_on:
      signoz-clickhouse:
        condition: service_healthy

  signoz-query-service:
    image: signoz/query-service:0.64.0
    container_name: signoz-query-service
    command:
      - "-config=/root/config/prometheus.yml"
      - "--use-logs-new-schema=true"
      - "--use-trace-new-schema=true"
    volumes:
      - ./monitoring/signoz/prometheus.yml:/root/config/prometheus.yml
      - signoz_data:/var/lib/signoz/
    environment:
      - ClickHouseUrl=tcp://clickhouse:9000
      - ALERTMANAGER_API_PREFIX=http://signoz-alertmanager:9093/api/
      - SIGNOZ_LOCAL_DB_PATH=/var/lib/signoz/signoz.db
      - STORAGE=clickhouse
      - GODEBUG=netdns=go
      - TELEMETRY_ENABLED=true
      - DEPLOYMENT_TYPE=docker-standalone-amd
    ports:
      - "8080:8080"
    restart: on-failure
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "localhost:8080/api/v1/health"]
      interval: 30s
      timeout: 5s
      retries: 3
    depends_on:
      signoz-clickhouse:
        condition: service_healthy

  signoz-frontend:
    image: signoz/frontend:0.64.0
    container_name: signoz-frontend
    restart: on-failure
    depends_on:
      - signoz-alertmanager
      - signoz-query-service
    ports:
      - "3301:3301"
    volumes:
      - ./monitoring/signoz/nginx-config.conf:/etc/nginx/conf.d/default.conf

  signoz-alertmanager:
    image: signoz/alertmanager:0.23.7
    container_name: signoz-alertmanager
    volumes:
      - alertmanager_data:/data
    depends_on:
      signoz-query-service:
        condition: service_healthy
    restart: on-failure
    ports:
      - "9093:9093"
    command:
      - --queryService.url=http://signoz-query-service:8085
      - --storage.path=/data

  signoz-otel-collector:
    image: signoz/signoz-otel-collector:0.111.16
    container_name: signoz-otel-collector
    command:
      - "--config=/etc/otel-collector-config.yaml"
      - "--manager-config=/etc/manager-config.yaml"
      - "--copy-path=/var/tmp/collector-config.yaml"
      - "--feature-gates=-pkg.translator.prometheus.NormalizeName"
    user: root
    volumes:
      - ./monitoring/signoz/official-otel-collector-config.yaml:/etc/otel-collector-config.yaml
      - ./monitoring/signoz/otel-collector-opamp-config.yaml:/etc/manager-config.yaml
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /:/hostfs:ro
    environment:
      - OTEL_RESOURCE_ATTRIBUTES=host.name=signoz-host,os.type=linux
      - LOW_CARDINAL_EXCEPTION_GROUPING=false
    ports:
      - "4317:4317" # OTLP gRPC receiver
      - "4318:4318" # OTLP HTTP receiver
    restart: on-failure
    depends_on:
      signoz-clickhouse:
        condition: service_healthy
      signoz-query-service:
        condition: service_healthy

volumes:
  postgres_imisanzu_data:
  postgres_oracle_data:
  redis_data:
  prometheus_data:
  grafana_data:
  signoz_data:
  clickhouse_data:
  zookeeper_data:
  alertmanager_data: