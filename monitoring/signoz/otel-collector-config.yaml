receivers:
  otlp:
    protocols:
      grpc:
        endpoint: 0.0.0.0:4317
      http:
        endpoint: 0.0.0.0:4318
  jaeger:
    protocols:
      grpc:
        endpoint: 0.0.0.0:14250
      thrift_http:
        endpoint: 0.0.0.0:14268
  zipkin:
    endpoint: 0.0.0.0:9411
  prometheus:
    config:
      scrape_configs:
        - job_name: 'otel-collector'
          scrape_interval: 60s
          static_configs:
            - targets: ['0.0.0.0:8888']

processors:
  batch:
    send_batch_max_size: 10000
  memory_limiter:
    limit_mib: 1000
    check_interval: 1s
  resourcedetection:
    detectors: [env, system]
  signozspanmetrics:
    metrics_exporter: prometheus
    latency_histogram_buckets: [100us, 1ms, 2ms, 6ms, 10ms, 100ms, 250ms]
    dimensions:
      - name: service.namespace
        default: default
      - name: deployment.environment
        default: default

exporters:
  clickhousetraces:
    datasource: tcp://clickhouse:9000/signoz_traces
  clickhousemetricswrite:
    datasource: tcp://clickhouse:9000/signoz_metrics
  clickhouselogsexporter:
    datasource: tcp://clickhouse:9000/signoz_logs
  prometheus:
    endpoint: "0.0.0.0:8889"
    const_labels:
      cluster: vntp-demo

extensions:
  health_check:
    endpoint: 0.0.0.0:13133
  pprof:
    endpoint: 0.0.0.0:1777
  zpages:
    endpoint: 0.0.0.0:55679

service:
  extensions: [health_check, pprof, zpages]
  pipelines:
    traces:
      receivers: [otlp, jaeger, zipkin]
      processors: [signozspanmetrics, batch, resourcedetection, memory_limiter]
      exporters: [clickhousetraces]
    metrics:
      receivers: [otlp, prometheus]
      processors: [batch, resourcedetection, memory_limiter]
      exporters: [clickhousemetricswrite, prometheus]
    logs:
      receivers: [otlp]
      processors: [batch, resourcedetection, memory_limiter]
      exporters: [clickhouselogsexporter]